{
  "_from": "errorify",
  "_id": "errorify@0.3.1",
  "_inBundle": false,
  "_integrity": "sha1-U+Cq7rGK3D5V+fHrTi2Vkp9Bt5s=",
  "_location": "/errorify",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "errorify",
    "fetchSpec": "latest",
    "name": "errorify",
    "raw": "errorify",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/errorify/-/errorify-0.3.1.tgz",
  "_shasum": "53e0aaeeb18adc3e55f9f1eb4e2d95929f41b79b",
  "_shrinkwrap": null,
  "_spec": "errorify",
  "_where": "/home/zach/Documents/Projects/TypeScript/BasicTSServer",
  "author": {
    "email": "zertosh@gmail.com",
    "name": "Andres Suarez"
  },
  "bugs": {
    "url": "https://github.com/zertosh/errorify/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Browserify plugin to write failed build error messages to the output file",
  "devDependencies": {
    "browserify": "^11.0.1",
    "concat-stream": "^1.4.7",
    "tap": "^1.3.2",
    "through2": "^0.6.3"
  },
  "files": [
    "README.md",
    "errorify.js"
  ],
  "homepage": "https://github.com/zertosh/errorify",
  "keywords": [
    "browserify",
    "browserify-plugin",
    "build"
  ],
  "license": "MIT",
  "main": "errorify.js",
  "name": "errorify",
  "optionalDependencies": {},
  "readme": "# errorify\n\nA [browserify](https://github.com/substack/node-browserify) plugin that writes the error message of a failed build to the output file, rendering it in the browser.\n\n[![Build Status](https://travis-ci.org/zertosh/errorify.svg?branch=master&style=flat)](https://travis-ci.org/zertosh/errorify)\n\n## Example\n\n```sh\nwatchify index.js -o bundle.js -p errorify\n```\n\nAfter adding the plugin to your `browserify` instance, `errorify` prevents `bundle()` from emitting `error`'s. All errors are trapped, including: invalid syntax in the source, a missing dependency, a failed transform, etc. When the error message is written to the output file, it is written to the DOM in a `<pre>` tag (or `console.error` if we are not in a browser environment). \n\nDuring development, it might look like this: \n\n![es6](http://i.imgur.com/Pen6bYu.png)\n\nOnly the `bundle()` stream is rewritten. If you pass in a callback, it'll get the expected `err` and `body` arguments.\n\n`errorify` is meant to be used with something like [watchify](https://github.com/substack/watchify). It saves you a trip to the terminal to see why a build failed.\n\nKeep in mind that since errors are no longer emitted, all builds appear \"successful\". Careful not to deploy broken code.\n\n_Note: Only tested with Browserify 9+_\n\n## Usage\n\n### API\n\n```js\nvar browserify = require('browserify');\nvar errorify = require('errorify');\nvar b = browserify({ /*...*/ });\nb.plugin(errorify, /* errorify options */);\n```\n\n#### Options\n\n* `replacer` _(optional)_ is a function that takes an error as its first argument, and returns a string that will be used as the output bundle.\n\n### CLI\n\nAfter installing `errorify` as a local devDependency, you can use the `--plugin` or `-p` option like so:\n\n```sh\nwatchify index.js -o bundle.js -p errorify\n```\n\n### CSS Customization\n\nThe added `<pre>` tag has the class name `errorify`, so you can customize errors in your page like so:\n\n```css\nbody > .errorify {\n  color: red;\n  font-family: 'Consolas', monospace;\n  padding: 5px 10px;\n}\n```\n\n## License\n\nMIT.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/zertosh/errorify.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "0.3.1"
}
